// 语言结构

// 单行注释
/*
多行注释
*/

/*
包名定义
- package main表示一个可独立执行的程序，每个Go应用程序都包含一个名为 main 的包。
- 文件名与包名没有直接关系，不一定要将文件名与包名定成同一个。
- 文件夹名与包名没有直接关系，并非需要一致。
- 同一个文件夹下的文件只能有一个包名，否则编译报错
*/
package main

// 引用定义
import "fmt"

/*
函数定义
main 函数是每一个可执行程序所必须包含的，一般来说都是在启动后第一个执行的函数（如果有 init() 函数则会先执行该函数）。
*/

/*
标识符（包括常量、变量、类型、函数名、结构字段等等）
- 标识符用来命名变量、类型等程序实体。
- 一个标识符实际上就是一个或是多个字母(A~Z和a~z)数字(0~9)、下划线_组成的序列，但是第一个字符必须是字母或下划线而不能是数字。
- 当标识符以一个大写字母开头，如：Group1，那么使用这种形式的标识符的对象就可以被外部包的代码所使用（客户端程序需要先导入这个包），这被称为导出（像面向对象语言中的 public）；
- 标识符如果以小写字母开头，则对包外是不可见的，但是他们在整个包的内部是可见并且可用的（像面向对象语言中的protected）。
*/

func init() {
	fmt.Println("Init func")
}

func main() {
	/*
		在Go程序中，一行代表一个语句结束，每个语句不需要像其它语言一样以分号结尾。
		(不推荐)如果需要将多个语句写在同一行，它们则必须使用分号人为区分。
	*/
	fmt.Println("Main func")
	fmt.Println("a")
	fmt.Println("b")
}

/*
运行程序
- 运行go文件：go run
- 编译：go build
*/
